Why should we build a REST-APi for our app?
    -For third-party clients/apps. If we are building mobile app for example, we will need to
    Create/Retrieve/Update or Delete some entities from our database. REST API is a good solution.

Deploy:

Apache mod_wsgi specific configuration
Note that if deploying to Apache using mod_wsgi, the authorization header is not passed through to a WSGI application by default, as it is assumed that authentication will be handled by Apache, rather than at an application level.

If you are deploying to Apache, and using any non-session based authentication, you will need to explicitly configure mod_wsgi to pass the required headers through to the application. This can be done by specifying the WSGIPassAuthorization directive in the appropriate context and setting it to 'On'.



# this can go in either server config, virtual host, directory or .htaccess
WSGIPassAuthorization On


Model relationship:

ForeignKey - One to many rel. (1:M)
OneToOne - 1:1 (unique)
ManyToMany - M:M


IMPORTANT:
If one CBV/FBV is being overrided by django-rest-framework view, 
put the path() variable for DefaultRouter() on top of the urlpatterns list.
IN THE URLPATTERNS, list element behave with overriding. For two same paths, bottom one will override upper one.

We should use JWT for authentication for snanetwork.rs
We should change AJAX methods in posts/show.html, mostly everything is GET :(.
We should watch 1 hour yt video for django rest framework!


API-ENDPOINTS:

    -snanetwork.rs/api/register/
    -snanetwork.rs/api/token/
    -snanetwork.rs/api/token/refresh
    -snanetwork.rs/api/posts/
    -snanetwork.rs/api/posts/<id>/
    -snanetwork.rs/api/users/
    -snanetwork.rs/api/users/<id>/
    -snanetwork.rs/api/profiles/
    -snanetwork.rs/api/profiles/<id>/



    *If we want to delete specific account, deleting the user will trigger profile-deleting (checked)*
    *When we delete specific user, it may take some time to refresh database.*

    -snanetwork.rs/api/register/ [POST] Y

    -snanetwork.rs/api/token/ [POST] Y

    -snanetwork.rs/api/token/refresh/ [POST] Y


    ------------------------------------------------------


	-snanetwork.rs/api/posts/ [GET, POST(login_required)] Y

	-snanetwork.rs/api/posts/<id>/ [GET, PUT(IsAdminOrOwner) PATCH(IsAdminOrOwner),
	        DELETE(IsAdminOrOwner)] Y

	-snanetwork.rs/api/users/ [GET]  Y

	-snanetwork.rs/api/users/<id>/ [GET, PUT(IsAdminOrOwner), PATCH(IsAdminOrOwner),
	        DELETE(IsAdminOrOwner)] Y

    -snanetwork.rs/api/profiles/ [GET] Y

	-snanetwork.rs/api/profiles/<id>/ [GET, PUT(IsAdminOrOwner), PATCH(IsAdminOrOwner)] Y


SCHEMA:
        POST <- USER -> PROFILE


We have modified:
-settings.py(ALLOWED_HOSTS, DEBUG, Config.json, INSTALLED_APPS)
-posts/views.py(like(), removed variable new_like_number)
-users/serializers.py posts/serializers.py, users/views.py, posts/views.py
-social_network/urls.py
-users/views.py(changed logout_view()(removed "AnonymousUser" validation and added .is_authenticated checking, which works.))

- Change some user-data (rocketmail, and some non-sense data)
-TOKEN LIFETIME
-Do not push sqlite db on Git!


8. Mart

    -If Client tries to change post author via PUT or PATCH, nothing happens.

    -snanetwork.rs/api/register/  WORKS
    -snanetwork.rs/api/token/  WORKS
    -snanetwork.rs/api/token/refresh  WORKS
    -snanetwork.rs/api/posts/  WORKS: [POST, GET]
    -snanetwork.rs/api/posts/<id>/
        WORKS:
            GET,
            PUT(
                text -> text,
                    too short content regulated
                img -> img,
                    empty image field regulated
                    empty files dictionary regulated
                text -> img
                    (Client gets status message successfully)
                img -> text
                    (Client gets status message successfully)
                -IsAdminOrOwner permission not tested.
            ),
            PATCH(
                img -> text
                    (Client gets status message successfully)
                img -> img
                    empty image field regulated
                    empty files dictionary regulated
                text -> img
                    (Client gets status message successfully)
                text -> text
                    too short content regulated.
                -IsAdminOrOwner permission not tested.
            ),
            DELETE(
                -Deleting.
                -IsAdminOrOwner permission.
            ).

9. Mart

    -snanetwork.rs/api/users/ [GET] WORKS
    -snanetwork.rs/api/users/<id>/
        WORKS:
            PUT/UPDATE VALIDATION(
                Username >= 5 chars,
                email must be valid.
                is_staff is read_only
            )
            GET,
            PUT(
                IsAdminOrOwner,
                Updating.
            ),
            PATCH(
                IsAdminOrOwner,
                Updating.
            ),
            DELETE(
                IsAdminOrOwner,
                Deleting
            )
    -snanetwork.rs/api/profiles/ [GET] WORKS
    -snanetwork.rs/api/profiles/<id>/
        WORKS:
            PUT/UPDATE VALIDATION(
                user_url & profile_url are read_only
                client can edit only image.
            ),
            GET,
            PUT(
                IsAdminOrOwner,
                Updating,
            ),
            PATCH(
                IsAdminOrOwner,
                Updating,
            )



- API root view created.
- Endpoints created.
-